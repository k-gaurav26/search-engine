Problem
 Statement 

	You are given a modified graph with  N vertices and M edges. Each vertex is a rectangle [ dimension of each vertex may be different ] . Your task is to place these vertices in 2-d space such that : 

 No two vertices overlap [ remember, they are rectangles  ] 
 All rectangles have their sides parallel to the axis. 
 Rectangles cannot be rotated. 


 For every edge in the graph, add the manhattan distance between the centres of the vertex for each edge as the cost of a solution ( C ). 
Now, there might be multiple ways to achieve this. So, you have to strive to keep C as low as possible. 
 Input 
 First line contains t ( ≤ 100 ) equal to the number of test cases. For each test case, the first line contains 2 space separated integers ( N and M respectively ). Then M lines follow, each line containing 2 integers x and y ( 0 ≤ x,y < N , x ≠ y ) denoting an edge between vertex x and y. Then follow N lines, where line  number i contains 2 integers a and b denoting the dimension of the ith vertex [ Here, a denotes the length parallel to x-axis and b denotes the length parallel to y-axis ] 
(  Note  : If the same pair x,y appears multiple times, it denotes multiple edges and hence, each pair contributes to the cost ). 
 NOTE :  Please note that all solutions will be tested on another set of test data  after the contest  which will follow the same pattern for test case generation ( as mentioned in 'Test Case Generation' section ).  The final score for a solution will be the score of solution on latter test data.  
 Output 

For each test case, print N lines , each containing 2 floating point numbers X and Y, denoting the co-ordinates of the centre of vertex i. 
 Note  : -109 ≤ X,Y ≤ 109 . Solutions not following the mentioned constraints will be adjudged as wrong answer. 
 Please note that the answers may not be optimal 
 Scoring 
 The Score for a solution  = (C+1). 
Your total score is the sum of your score for all the test cases. 
You have to keep the score as low as possible. 
 