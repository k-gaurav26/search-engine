Problem
Vasya's older brother, Petya, attends an algorithm course in his school. Today he learned about matchings in graphs. Formally, a set of edges in a graph is called a matching if no pair of distinct edges in the set shares a common endpoint.
Petya instantly came up with an inverse concept, an antimatching. In an antimatching, any pair of distinct edges should have a common endpoint.
Petya knows that finding a largest matching in a graph is a somewhat formidable task. He wonders if finding the largest antimatching is any easier. Help him find the number of edges in a largest antimatching in a given graph.
Input:
The first line contains T, number of test cases per file.
The first line of each test case contains two integers n and m− the number of vertices and edges of the graph respectively (1≤n≤104, 0≤m≤104).
The next m lines describe the edges. The i-th of these lines contains two integers ui​ and vi​− the indices of endpoints of the i-th edge (1≤ui​,vi​≤n, ui​=vi​).
It is guaranteed that the graph does not contain self-loops nor multiple edges. It is not guaranteed that the graph is connected.
Output:
Print a single number per test case − the maximum size of an antichain in the graph.
