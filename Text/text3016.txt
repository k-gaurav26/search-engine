Problem
Read problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given a tree with N nodes (numbered 1 through N) and Q queries (numbered 1 through Q). For each valid i, in the i-th query, you are given Ki​ nodes x1​,x2​,…,xKi​​. Consider the smallest subtree which contains all of these nodes; you should find all centers of this subtree.
A node is called a center of a tree if it lies in the middle of at least one longest path in that tree. Note that there may be multiple longest paths (paths with the same maximum length) and for a longest path which contains an even number of nodes, there are two nodes lying in the middle of this path.
Note: A subtree here refers to a connected subgraph of the tree. Selecting a node does not mean all its descendants have to be selected.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains two space-separated integers N and Q.
N−1 lines follow. For each valid i, the i-th of these lines contains two space-separated integers u and v denoting that there is an edge between nodes u and v in the tree.
Q more lines follow. For each valid i, the i-th of these lines contains an integer Ki​, followed by a space and Ki​ space-separated integers x1​,x2​,…,xKi​​.

Note: The input and output of this problem are large, so prefer using fast input/output methods.
Output
For each query, print a single line containing an integer C denoting the number of centers, followed by a space and C space-separated integers — the nodes which are centers of the given subtree, sorted in increasing order.
