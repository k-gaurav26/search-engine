Problem
Read problems statements Hindi ,Bengali , Mandarin chinese , Russian and Vietnamese as well.
Consider the following algorithm, which generates a (not necessarily uniformly) random permutation of numbers 1 through N:
P := [1, 2, ..., N]
for i in 1..N do
    j := rand(1, N)
    swap(P[i], P[j])

Here, rand(1, N) returns a uniformly random integer between 1 and N inclusive. Let's denote the probability that the permutation generated by this algorithm is P by p(P).
Find a permutation P1​ such that p(P1​) is maximum possible and a permutation P2​ such that p(P2​) is minimum possible.
Input
The first and only line of the input contains a single integer N.
Output
Print two lines. The first line should contain N space-separated integers denoting your permutation P1​. The second line should contain N space-separated integers denoting your permutation P2​.
If there are multiple answers, you may print any one.
