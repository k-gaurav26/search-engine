Problem
This is an interactive task
Let's clear things up with some definitions:

Two binary strings S and T are anagrams of each other if it is possible to rearrange the letters in the string S to get a string equal to T.
Let S[l,r] be the substring of S starting at l and ending at r both inclusive.
Let f(S,l,r) be the frequency of character 1 in S[l,r].

Chef has two hidden binary strings A and B both of which are of size N. It is known that A and B are not anagrams.
You can make queries on the two strings. Each query is of the form:
? l r
The judge will reply with the value of ∣f(A,l,r)−f(B,l,r)∣
You have to find any such index i such that both conditions are fulfilled:

A[1,i−1] and B[1,i−1] are anagrams.
A[i+1,N] and B[i+1,N] are anagrams.

If there is no such index then print -1.
You can make atmost 35 queries per test case.
Note: i can be 1 or N as well. We consider all of A[1,0],B[1,0],A[N+1,N],B[N+1,N] to be empty strings.
Interaction

Begin the interaction by reading a single integer T denoting the number of test cases. The description of interaction for T test cases follows.
Then for each test case read a single integer N denoting the size of A and B.
To ask a query, output ? i j (1≤i≤j≤N) and then read a single integer.
To print the answer, output !  then print the index.
If at any time you make an invalid query or exceed the query limit, the interaction is terminated and you will receive a Wrong Answer verdict.
Don't forget to flush the output after printing each line!

