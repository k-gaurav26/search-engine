Problem
Read problems statements in Mandarin chinese, Russian and Vietnamese as well.
As usual, Tom is trying to catch Jerry. To accomplish this task, Tom hired K other cats (Tom does not take part in the chase). Formally, they are in a graph G with N vertices and M edges. Let's denote the set of vertices of G by V. The graph has a special property: for each simple cycle containing at least four vertices, there is an edge which is not part of this cycle, but connects two distinct vertices on the cycle.
Jerry can only move along the edges of the graph, but arbitrarily fast. The cats don't have to follow the edges — they can use a helicopter to go to any vertices they want.
The process of catching Jerry happens in several rounds as follows:

In round 0, the cats choose a set of vertices X0​⊆V with ∣X0​∣≤K; Jerry chooses a vertex v0​∈V∖X0​.
For each i≥0, let's denote the set of vertices containing cats in round i by Xi​ and the vertex containing Jerry by vi​. In round i+1, the cats choose a subset Xi+1​⊆V with ∣Xi+1​∣≤K.
Afterwards in round i+1, Jerry must choose a vertex vi+1​∈V∖Xi+1​ such that there is a path from vi​ to vi+1​ which doesn't pass through any vertex in Xi​∩Xi+1​. If Jerry cannot choose such a vertex, the cats win.

If this process can last forever (K cats are not enough to catch Jerry), then Jerry wins.
Your task is to calculate the minimum number of cats K which Tom has to call in order to guarantee that Jerry will be caught (there is no winning strategy for Jerry).
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains two space-separated integers N and M.
M lines follow. Each of these lines contains two space-separated integers u and v denoting an edge between vertices u and v.

Output
For each test case, print a single line containing one integer — the minimum number of cats needed to catch Jerry.
