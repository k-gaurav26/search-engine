Problem
An array of integers is called good if all its elements are perfect squares.
You are given an array A of N integers. In one move, you can do the following:

Pick a subset of indices of the array, say {i1​,i2​,…,ik​} where 1≤i1​<i2​<…<ik​≤N
Next, pick an integer X>0
Finally, multiply the value at each chosen index by X, i.e, set Aij​​ to Aij​​⋅X for each 1≤j≤k

Find the minimum number of moves required to make the array good.
Note: The value of X is fixed for a given move, but can vary between moves.
Input Format

The first line of input contains an integer T, denoting the number of test cases. The description of T test cases follows.
Each test case contains two lines of input.
The first line of each test case contains N, the size of the array.
The second line contains N space-separated integers A1​,A2​,…,AN​.

Output Format
For each testcase, output in a single line the minimum number of moves required to make the array good.
