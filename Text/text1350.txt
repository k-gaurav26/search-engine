Problem
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Recently, Chef studied the binary numeral system and noticed that it is extremely simple to perform bitwise operations like AND, XOR or bit shift on non-negative integers, while it is much more complicated to perform arithmetic operations (e.g. addition, multiplication or division).
After playing with binary operations for a while, Chef invented an interesting algorithm for addition of two non-negative integers A and B:
function add(A, B):
    while B is greater than 0:
        U = A XOR B
        V = A AND B
        A = U
        B = V * 2
    return A

Now Chef is wondering how fast this algorithm is. Given the initial values of A and B (in binary representation), he needs you to help him compute the number of times the while-loop of the algorithm is repeated.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single string A.
The second line contains a single string B.

Output
For each test case, print a single line containing one integer â€• the number of iterations the algorithm will perform during addition of the given numbers A and B.
