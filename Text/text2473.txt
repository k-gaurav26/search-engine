Problem
Heavy-light decomposition of a tree is a powerful tool that often helps in the most difficult tree data structure problems.
Heavy-light decomposition is to be built on a rooted tree. In this problem, the node with the number 1 should be considered the root of a tree. Heavy light decomposition is a colouring of edges of the tree. Each edge is either heavy or light. For each non leaf node (node having degree greater than 1), from all the edges emanating from it into the subtree rooted at this vertex should have exactly one heavy edge. 

The heavy-light decomposition is called correct, if you can reach any node from the root node by using no more that ⌊ log2 N ⌋ light edges, where N is the number of nodes in the tree.
Given a tree, calculate the number of its' correct heavy-light decompositions. As answer could be very large, please print it modulo 19101995.
Input
There is exactly one test case.
The first line of input consists of a single integer N, denoting the number of the nodes in the tree.
Each of the following N - 1 lines contains a pair of integers, denoting the numbers of the nodes that are connected with an edge. The nodes are enumerated by positive integers in the range [1; N].
Output
Output the number of correct heavy-light decompositions of the given tree. Since this number can be huge, please output it modulo 19101995.
