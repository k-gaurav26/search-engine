Problem
 Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.
You are going to play a game with Chef on a grid of size n rows by m columns. Some of the cells of the grid are blocked. The aim of the game is to create snakes of as large lengths as possible in the grid, while avoiding death and getting bonuses with along with the journey.
This is an interactive challenge, judge program will be playing on behalf of Chef. 
The game will played alternately between you and the judge. You are the one to move first. In your first move, you can choose any of the empty cells of the grid and start creating a snake from that cell. A snake is identified by its two ends, head and tail. When you create a new snake, then both head and tail of the snake will be same. 

In your subsequent moves, you can increase length of your snake by extending it from either of its ends, i.e. from head or tail. In other words, you can choose an empty cell adjacent to either head or tail, and extend the snake by moving its respective end to the empty cell. A cell is said to be adjacent to other if they share a side (i.e. each cell has no more than 4 cells adjacent to it).


If at some stage, you are not able to extend the snake, then the snake will be considered dead. Now you can create another snake on the grid similarly. For each snake created, you will be granted score proportional to its length. You will also be charged penalty for each dead snake. Please see the scoring section for exact details. 
Please note that when you or judge make a move to create or extend snake, then the cells occupied by the dead or live snakes, or initially blocked cells are considered to be non-empty cells.


During your journey, you can also be given a special bonus. In this special bonus, the judge program will be freezed for turns turns, i.e. during these turns, the judge will not be creating or extending a snakes. All other rules remain unchanged.


Note that if there is no empty cell left in the grid, then the game will end. Game will also be considered to be ended if your move is an EXIT move. Please see the next sections for details about various moves.

Input and Output
The first line of the input contains three space-separated integers n, m, K denoting the height and width of the grid and number of blocked cells.
Each of following K lines will contain two space-separated integers x y, denoting the coordinate of blocked cell.  
After that you will be first one to make a move, followed by the move of the judge, followed by you and then judge and so on in the alternate order. In your move, you can print "EXIT" to exit the game. Also, the judge can print "EXIT" if all the cells of the grids are occupied and there is no way to move further. You should not make any move after that. 
Please flush the output buffer after each of your moves (for example, by calling fflush(stdout) in C++), otherwise your solution might not work properly.
For further details, please read the next section.
Interaction with the judge
Each of your moves can have one of tree types.

MOVE from_x from_y to_x to_y : Extend the length of the current snake by moving its' one of the ends from the cell with coordinates (from_x, from_y) to one of its adjacent empty neighbours with coordinates (to_x, to_y). Please note that (from_x, from_y) should be one of the ends of the snake.
NEW x y : Create a new snake whose head/tail will be at an empty cell with coordinates (x, y).
EXIT : Exit the game. 


Please note that we follow 1-based indexing in the entire problem.

Similarly, judge's move can also be one of the above kinds. Other than the above moves, judge will have one more move, called FREEZE move. During this move, the judge will be freezed and won't take its' turn of extending or creating snake. This move will be represented by FREEZE turns, where turns denotes the number of turns for which judge will be freezed. 
Note that if in its' turn, judge made FREEZE turns move, then in its' next move, it will have to make FREEZE turns-1 move if turns > 1.
Please see the second example for better understanding.

