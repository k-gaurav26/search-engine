Problem
Read problems statements in Mandarin Chinese, Russian, Vietnamese and Bengali as well.
You are given a tree of N nodes rooted at node 1. Each node u initially has a positive value au​ associated with it.
You randomly choose one node in the tree and change its value to zero. If any node u has a value equal to 0, a random node v will be chosen in the subtree of u (u=v), and the values au​ and av​ will be swapped, hence the value of the node v will become zero and the process will continue until the zero is on a leaf node. At this point, we will call the tree a final tree.
Note: there is exactly one node with a value equal to zero in a final tree and that node is a leaf node.
Your task is to tell how many different final trees are possible. Two final trees are different if there exists at least one node u, such that the value of the node u in one final tree differs from the value of the node u in the other final tree. Since the answer can be large, print it modulo 109+7.
Input

The first line contains an integer T, the number of test cases. Then the test cases follow.
The first line of each test case contains an integer N, the number of nodes.
Each of the next N−1 lines contains two integers u and v, denoting that there is an undirected edge between the node u and the node v.
The next line contains N integers a1​,…,aN​.

Output
For each test case, output on a new line, number of different final trees possible, modulo 109+7.
