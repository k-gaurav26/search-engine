Problem
 Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.
For a given connected graph G with N vertices and M undirected weighted edges, the goal is to perform Q queries, each belonging to one of the below 3 types:


AssignZero(u, v) := Change the weight of edge between vertices u and v to zero. It is guaranteed there is an edge between vertex u and v in the graph G. 
AssignOriginal(u, v) := Change the weight of edge between vertices u and v to its original weight.
MstWeight() := Returns the weight of Minimal Spanning Tree of G.

Input
First line of the input contains three space separated integers N, M and Q, denoting the number of vertices in G, the number of edges in G, and the number of queries to perform, respectively.

Next M lines follow, each consisting of three space separated integers u, v and w, denoting that there is an edge between vertices u and v in G of weight w.

The i-th of the following Q lines corresponds to the i-th query. It starts with a single integer qtype denoting the type of the query. If qtype = 1 or 2, it is followed by two space separated integers u, v denoting the arguments of the query.

Output
For each query of type 3, output an integer in a single line corresponding to the answer to this query.

