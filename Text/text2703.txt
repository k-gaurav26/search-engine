Problem
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given a tree with N vertices (numbered 1 through N). Each edge of this tree is coloured either black or white.
A single-colour subtree of this tree is a non-empty maximal set S of its edges such that all edges in S have the same colour and each of these edges can be reached from any other edge in S by only traversing edges from S. A maximal set is a set to which we cannot add any edge without breaking this property.
You should process Q queries. In each query, you are given two vertices u and v. Flip the colour of each edge on the path between u and v (black edges become white and white edges become black) and then compute the number of single-colour subtrees of the tree. The colours of the edges remain flipped in the subsequent queries.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
Each of the next N−1 lines contains three space-separated integers a, b and c denoting that there is an edge between vertices a and b with colour c; a black edge is denoted by c=0 and a white edge by c=1.
The next line contains a single integer Q.
The following Q lines describe queries. Each of these lines contains two space-separated integers u and v.

Output
For each query, print a single line containing one integer — the number of single-colour subtrees.
