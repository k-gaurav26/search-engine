Problem
 Read problems statements in Mandarin Chinese  and Russian.
Sereja likes to generate pseudo random binary sequences. Now Sereja has two generators: one is a based on linear congruential generators (LCGs) and another is based on Xorshift.
Sereja has some binary sequences generated in past times, and he wants to know which generator makes these sequences. You can know the details of Sereja's generators, then can you answer this problem?
The following is the details. We may give the length N and a seed integer S to the generators, then they generate a binary sequence A[1], A[2], ..., A[N].
The 1st generator works as follows (C++ code. If you are not familiar with C++, please see the below section Notes for C++):
/* ------------------ start here ---------------------*/
unsigned X; // we assume that unsigned is a 32bit integer type
void srand1(unsigned S){
X = S;
}
unsigned nextInteger1(void){
X = X * 1103515245 + 12345;
return (X / 65536) % 32768;
}
void generator1(int N, unsigned S, int A[]){
srand1(S);
for(int i=1;i<=N;i++){
A[i] = nextInteger1() % 2;
}
}
/* ------------------ end here -----------------------*/


The 2nd generator works as follows (C++ code):

/* ------------------ start here ---------------------*/
unsigned x, y, z, w; // we assume that unsigned is a 32bit integer type
void srand2(unsigned S){
x = S;
y = x * S;
z = y * S;
w = z * S;
}
unsigned nextInteger2(void){
unsigned t = x ^ (x << 11);
x = y; y = z; z = w;
return w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
}
void generator2(int N, unsigned S, int A[]){
srand2(S);
for(int i=1;i<=N;i++){
A[i] = nextInteger2() % 2;
}
}
/* ------------------ end here -----------------------*/

Note that the LCG used in the 1st generator is the same one suggested in ISO/IEC 9899 (pp. 346--347), and Xorshift used in the 2nd generator is the same one in the paper by Marsaglia (July 2003).
Input
The first line of input contains an integer T, denoting the number of test cases. Then T test cases follow.
Each test case has only one line. The line contains the string of length N, denoting the array A[1], A[2], ..., A[N], where the string consists of only characters '0' and '1', and the ith character denotes A[i].
Note that the integer N is not given in the input explicitly.
Output
For each test case, print "LCG" if the given sequence generated by the 1st generator, or print "Xorshift" if the given sequence is generated by the 2nd generator.
